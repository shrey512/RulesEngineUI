// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RulesEngineEditor.Data;

namespace RulesEngineEditorServer.Migrations
{
    [DbContext(typeof(RulesEngineEditorDbContext))]
    [Migration("20240404112346_Added ClientName prop in worklowdata model class")]
    partial class AddedClientNamepropinworklowdatamodelclass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RulesEngineEditor.Data.JsonDataModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsonDataModels");
                });

            modelBuilder.Entity("RulesEngineEditor.Models.ClientModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientTable");
                });

            modelBuilder.Entity("RulesEngineEditor.Models.RuleData", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Expression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RuleDataId")
                        .HasColumnType("int");

                    b.Property<int>("RuleExpressionType")
                        .HasColumnType("int");

                    b.Property<string>("RuleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("SuccessEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkflowDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RuleDataId");

                    b.HasIndex("WorkflowDataId");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("RulesEngineEditor.Models.ScopedParamData", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Expression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RuleDataId")
                        .HasColumnType("int");

                    b.Property<int>("Seq")
                        .HasColumnType("int");

                    b.Property<int?>("WorkflowDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RuleDataId");

                    b.HasIndex("WorkflowDataId");

                    b.ToTable("ScopedParam");
                });

            modelBuilder.Entity("RulesEngineEditor.Models.WorkflowData", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RuleExpressionType")
                        .HasColumnType("int");

                    b.Property<int>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workflow");
                });

            modelBuilder.Entity("RulesEngineEditor.Models.RuleData", b =>
                {
                    b.HasOne("RulesEngineEditor.Models.RuleData", null)
                        .WithMany("Rules")
                        .HasForeignKey("RuleDataId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("RulesEngineEditor.Models.WorkflowData", null)
                        .WithMany("Rules")
                        .HasForeignKey("WorkflowDataId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("RulesEngineEditor.Models.ScopedParamData", b =>
                {
                    b.HasOne("RulesEngineEditor.Models.RuleData", null)
                        .WithMany("LocalParams")
                        .HasForeignKey("RuleDataId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("RulesEngineEditor.Models.WorkflowData", null)
                        .WithMany("GlobalParams")
                        .HasForeignKey("WorkflowDataId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("RulesEngineEditor.Models.RuleData", b =>
                {
                    b.Navigation("LocalParams");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("RulesEngineEditor.Models.WorkflowData", b =>
                {
                    b.Navigation("GlobalParams");

                    b.Navigation("Rules");
                });
#pragma warning restore 612, 618
        }
    }
}
